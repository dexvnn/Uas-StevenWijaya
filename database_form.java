/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import java.sql.Connection; 
import java.sql.DriverManager; 
import java.sql.SQLException; 
import java.sql.Statement; 
import java.sql.ResultSet; 
import javax.swing.JFrame;
import javax.swing.JOptionPane; 
import java.awt.*;
import java.awt.print.*;
import java.io.FileOutputStream;
import java.sql.*;
import javax.swing.*;
import static javax.swing.text.html.HTML.Attribute.ID;
import org.apache.poi.ss.usermodel.*;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import java.io.FileOutputStream;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.*;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import java.io.FileOutputStream;
import org.apache.poi.ss.usermodel.Workbook;

/**
 *
 * @author steve
 */
public final class database_form extends javax.swing.JFrame {
Connection con; 
Statement stmt; 
ResultSet rs; 
int curRow = 0;

    /**
     * Creates new form database_form
     */

  public database_form() {
   initComponents();
   setTitle("Cabang The Soulust");
   setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
   DoConnect(); 
   
    }
  

public void DoConnect( ) { 
    try {
    //CONNECT TO THE DATABASE
    String host = "jdbc:derby://localhost:1527/Database_form";
    String uName = "cabang";
    String uPass = "admin123";
    con = DriverManager.getConnection(host, uName, uPass);

    //EXECUTE SOME SQL AND LOAD THE RECORDS INTO THE RESULTSET
   stmt = con.createStatement( ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE ); 
    String SQL = "SELECT * FROM Data_cabang";
    rs = stmt.executeQuery(SQL);

    //MOVE THE CURSOR TO THE FIRST RECORD AND GET THE DATA
    rs.next();
    int id_col = rs.getInt("ID");
    String id = Integer.toString(id_col);
    String alamat = rs.getString("Alamat");
    String kecamatan = rs.getString("Kecamatan");
    String kota = rs.getString("Kota");

    //DISPLAY THE FIRST RECORD IN THE TEXT FIELDS
    textID.setText(id);
    textAlamat.setText(alamat);
    textKecamatan.setText(kecamatan);
    textKota.setText(kota);

} catch (SQLException err) {
    JOptionPane.showMessageDialog(this, err.getMessage());
}
}

public void exportToExcelFromDatabase() {
    Workbook workbook = new XSSFWorkbook();
    Sheet sheet = workbook.createSheet("Data Pembelian");

    String[] columns = {"ID", "KATEGORI_ITEM", "WARNA", "JUMLAH", "SIZE", "ADD_ON", "COLECTION"};

    try {
        // Koneksi database
        String host = "jdbc:derby://localhost:1527/Database_form";
        String uName = "cabang";
        String uPass = "admin123";
        Connection con = DriverManager.getConnection(host, uName, uPass);

        // Buat statement
        Statement stmt = con.createStatement();
        ResultSet rs = stmt.executeQuery("SELECT * FROM PEMBELIAN");

        // Header
        Row headerRow = sheet.createRow(0);
        for (int i = 0; i < columns.length; i++) {
            Cell cell = headerRow.createCell(i);
            cell.setCellValue(columns[i]);
        }

        // Data rows
        int rowIndex = 1;
        while (rs.next()) {
            Row row = sheet.createRow(rowIndex++);
            row.createCell(0).setCellValue(rs.getInt("ID"));
            row.createCell(1).setCellValue(rs.getString("KATEGORI_ITEM"));
            row.createCell(2).setCellValue(rs.getString("WARNA"));
            row.createCell(3).setCellValue(rs.getInt("JUMLAH"));
            row.createCell(4).setCellValue(rs.getString("SIZE"));
            row.createCell(5).setCellValue(rs.getString("ADD_ON"));
            row.createCell(6).setCellValue(rs.getString("COLECTION"));
        }

        // Simpan ke file
        FileOutputStream out = new FileOutputStream("C:/Users/steve/Documents/netBeansProjects/Data_Pembelian.xlsx");
        workbook.write(out);
        out.close();
        workbook.close();
        rs.close();
        stmt.close();
        con.close();

        JOptionPane.showMessageDialog(this, "Data PEMBELIAN berhasil diekspor ke Excel!");

    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Gagal ekspor: " + e.getMessage());
    }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        textID = new javax.swing.JTextField();
        textAlamat = new javax.swing.JTextField();
        textKecamatan = new javax.swing.JTextField();
        textKota = new javax.swing.JTextField();
        textkota = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btnFirst = new javax.swing.JButton();
        btnPrevious = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        btnLast = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        btnDeleteRecord = new javax.swing.JButton();
        btnNewRecord = new javax.swing.JButton();
        btnUpdateRecord = new javax.swing.JButton();
        btnSaveRecord = new javax.swing.JButton();
        btnCancelNewRecord = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        textkota.setText("Kota");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textID, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textkota, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(textAlamat, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                        .addGap(35, 35, 35)
                        .addComponent(textKecamatan, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(textKota))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textAlamat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textKecamatan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textKota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textkota))
                .addGap(27, 27, 27))
        );

        btnFirst.setText("First");
        btnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstActionPerformed(evt);
            }
        });

        btnPrevious.setText("Previous");
        btnPrevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreviousActionPerformed(evt);
            }
        });

        btnNext.setText("Next");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnLast.setText("Last");
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });

        jButton1.setText("Cetak");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(btnFirst)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnPrevious)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnNext)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLast)
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFirst)
                    .addComponent(btnPrevious)
                    .addComponent(btnNext)
                    .addComponent(btnLast)
                    .addComponent(jButton1))
                .addContainerGap(10, Short.MAX_VALUE))
        );

        btnDeleteRecord.setText("Delete  Record");
        btnDeleteRecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteRecordActionPerformed(evt);
            }
        });

        btnNewRecord.setText("New Record");
        btnNewRecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewRecordActionPerformed(evt);
            }
        });

        btnUpdateRecord.setText("Update Record");
        btnUpdateRecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateRecordActionPerformed(evt);
            }
        });

        btnSaveRecord.setText("Save New Record");
        btnSaveRecord.setEnabled(false);
        btnSaveRecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveRecordActionPerformed(evt);
            }
        });

        btnCancelNewRecord.setText("Cancel New Record");
        btnCancelNewRecord.setEnabled(false);
        btnCancelNewRecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelNewRecordActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnUpdateRecord)
                .addGap(34, 34, 34)
                .addComponent(btnNewRecord, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnDeleteRecord)
                .addContainerGap())
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(81, Short.MAX_VALUE)
                .addComponent(btnSaveRecord)
                .addGap(45, 45, 45)
                .addComponent(btnCancelNewRecord)
                .addGap(40, 40, 40))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDeleteRecord)
                    .addComponent(btnNewRecord)
                    .addComponent(btnUpdateRecord))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSaveRecord)
                    .addComponent(btnCancelNewRecord))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        // TODO add your handling code here:
try {
    if (rs.next()) {
        int id_col = rs.getInt("ID");
        String id = Integer.toString(id_col);
        String alamat = rs.getString("Alamat");
        String kecamatan = rs.getString("Kecamatan");
        String kota = rs.getString("Kota");

        textID.setText(id);
        textAlamat.setText(alamat);
        textKecamatan.setText(kecamatan);
        textKota.setText(kota);
    } else {
        rs.previous();
        JOptionPane.showMessageDialog(this, "End of File");
    }
} catch (SQLException err) {
    JOptionPane.showMessageDialog(this, err.getMessage());
}

    }//GEN-LAST:event_btnNextActionPerformed

    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed
        // TODO add your handling code here:
    try {
    rs.first();
    int id_col = rs.getInt("ID");
    String id = Integer.toString(id_col);
    String alamat = rs.getString("Alamat");
    String kecamatan = rs.getString("Kecamatan");
    String kota = rs.getString("Kota");


    textID.setText(id);
    textAlamat.setText(alamat);
    textKecamatan.setText(kecamatan);
    textKota.setText(kota);
} catch (SQLException err) {
    JOptionPane.showMessageDialog(this, err.getMessage());
}

    }//GEN-LAST:event_btnFirstActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        // TODO add your handling code here:
    try {
    rs.last();
    int id_col = rs.getInt("ID");
    String id = Integer.toString(id_col);
    String alamat = rs.getString("Alamat");
    String kecamatan = rs.getString("Kecamatan");
    String kota = rs.getString("Kota");


    textID.setText(id);
    textAlamat.setText(alamat);
    textKecamatan.setText(kecamatan);
    textKota.setText(kota);
} catch (SQLException err) {
    JOptionPane.showMessageDialog(this, err.getMessage());
}

    }//GEN-LAST:event_btnLastActionPerformed

    private void btnPreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreviousActionPerformed
        // TODO add your handling code here:
    try {
    if (rs.previous()) {
        int id_col = rs.getInt("ID");
        String id = Integer.toString(id_col);
        String alamat = rs.getString("Alamat");
        String kecamatan = rs.getString("Kecamatan");
        String kota = rs.getString("Kota");

        textID.setText(id);
        textAlamat.setText(alamat);
        textKecamatan.setText(kecamatan);
        textKota.setText(kota);
    } else {
        rs.next();
        JOptionPane.showMessageDialog(this, "Start of File");
    }
} catch (SQLException err) {
    JOptionPane.showMessageDialog(this, err.getMessage());
}

    }//GEN-LAST:event_btnPreviousActionPerformed

    private void btnNewRecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewRecordActionPerformed
        // TODO add your handling code here:
  try {
        // Simpan posisi record saat ini sebelum masuk mode 'New Record'
        curRow = rs.getRow();

        // Kosongkan semua field input untuk entri baru
        textID.setText("");
        textAlamat.setText("");
        textKecamatan.setText("");
        textKota.setText("");

        // Nonaktifkan semua tombol navigasi & aksi lain
        btnFirst.setEnabled(false);
        btnPrevious.setEnabled(false);
        btnNext.setEnabled(false);
        btnLast.setEnabled(false);
        btnUpdateRecord.setEnabled(false);
        btnDeleteRecord.setEnabled(false);
        btnNewRecord.setEnabled(false);

        // Aktifkan tombol Save dan Cancel
        btnSaveRecord.setEnabled(true);
        btnCancelNewRecord.setEnabled(true);

        // (Opsional) Fokuskan kursor ke text input pertama
        textAlamat.requestFocus();
        
    } catch (SQLException err) {
        JOptionPane.showMessageDialog(this, "Terjadi kesalahan: " + err.getMessage());
    }

    }//GEN-LAST:event_btnNewRecordActionPerformed

    private void btnCancelNewRecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelNewRecordActionPerformed
        // TODO add your handling code here:
    try {
    rs.absolute(curRow);  // Pindah ke baris data tertentu dalam ResultSet

    textAlamat.setText(rs.getString("Alamat"));
    textKecamatan.setText(rs.getString("Kecamatan"));
    textKota.setText(rs.getString("Kota"));
    textID.setText(Integer.toString(rs.getInt("ID")));

    btnFirst.setEnabled(true);
    btnPrevious.setEnabled(true);
    btnNext.setEnabled(true);
    btnLast.setEnabled(true);
    btnUpdateRecord.setEnabled(true);
    btnDeleteRecord.setEnabled(true);
    btnNewRecord.setEnabled(true);

    btnSaveRecord.setEnabled(false);
    btnCancelNewRecord.setEnabled(false);
} catch (SQLException err) {
    JOptionPane.showMessageDialog(this, err.getMessage());
}

    }//GEN-LAST:event_btnCancelNewRecordActionPerformed

    private void btnUpdateRecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateRecordActionPerformed
        // TODO add your handling code here:
// Ambil data dari textfield
String alamat = textAlamat.getText();
String kecamatan = textKecamatan.getText();
String kota = textKota.getText();
String id = textID.getText();

// Validasi dulu agar ID tidak kosong
if (id.isEmpty()) {
    JOptionPane.showMessageDialog(this, "ID tidak boleh kosong!");
    return;
}

try {
    // Ubah ID dari String ke Integer
    int newID = Integer.parseInt(id);

    // 1. Buat perintah SQL UPDATE dengan klausa WHERE
    // Perhatikan tanda tanya (?) sebagai placeholder
    String sql = "UPDATE DATA_CABANG SET ALAMAT = ?, KECAMATAN = ?, KOTA = ? WHERE ID = ?";

    // 2. Gunakan PreparedStatement untuk keamanan dan kemudahan
    PreparedStatement ps = con.prepareStatement(sql);

    // 3. Set nilai untuk setiap placeholder (?)
    ps.setString(1, alamat);      // ? pertama untuk ALAMAT
    ps.setString(2, kecamatan);   // ? kedua untuk KECAMATAN
    ps.setString(3, kota);        // ? ketiga untuk KOTA
    ps.setInt(4, newID);          // ? keempat untuk ID di klausa WHERE

    // 4. Eksekusi perintahnya
    // executeUpdate() akan mengembalikan jumlah baris yang terpengaruh
    int rowsAffected = ps.executeUpdate();

    // 5. Cek apakah ada baris yang berhasil di-update
    if (rowsAffected > 0) {
        // Jika rowsAffected lebih dari 0, berarti data dengan ID tersebut ditemukan dan berhasil diupdate
        JOptionPane.showMessageDialog(this, "Update Berhasil!");
    } else {
        // Jika rowsAffected adalah 0, berarti tidak ada data dengan ID tersebut
        JOptionPane.showMessageDialog(this, "Update Gagal: User dengan ID " + newID + " tidak ditemukan.");
    }

} catch (SQLException err) {
    JOptionPane.showMessageDialog(this, "Terjadi error database: " + err.getMessage());
    err.printStackTrace(); // Ini akan mencetak detail error di console NetBeans, sangat membantu untuk debug
} catch (NumberFormatException e) {
    // Ini untuk menangani jika user memasukkan teks (bukan angka) di field ID
    JOptionPane.showMessageDialog(this, "Format ID salah, harus berupa angka!");
}
    
    }//GEN-LAST:event_btnUpdateRecordActionPerformed

    private void btnSaveRecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveRecordActionPerformed
        // TODO add your handling code here:
String alamat = textAlamat.getText();
String kecamatan = textKecamatan.getText();
String kota = textKota.getText();
String id = textID.getText();

try {
    int newID = Integer.parseInt(id); // Fix here

    rs.moveToInsertRow();

    rs.updateInt("ID", newID);
    rs.updateString("Alamat", alamat);
    rs.updateString("Kecamatan", kecamatan);
    rs.updateString("Kota", kota);

    rs.insertRow();

    stmt.close();
    rs.close();

    stmt = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,
                               ResultSet.CONCUR_UPDATABLE);

    String SQL = "SELECT * FROM data_cabang";
    rs = stmt.executeQuery(SQL);
    rs.next();

    textID.setText(id);
    textAlamat.setText(alamat);
    textKecamatan.setText(kecamatan);
    textKota.setText(kota);

    // Disable buttons
    btnFirst.setEnabled(false);
    btnPrevious.setEnabled(false);
    btnNext.setEnabled(false);
    btnLast.setEnabled(false);
    btnUpdateRecord.setEnabled(false);
    btnDeleteRecord.setEnabled(false);
    btnNewRecord.setEnabled(false);

    // Enable Save/Cancel
    btnSaveRecord.setEnabled(true);
    btnCancelNewRecord.setEnabled(true);

    JOptionPane.showMessageDialog(this, "Record Saved");
} catch (NumberFormatException e) {
    JOptionPane.showMessageDialog(this, "ID harus berupa angka: " + e.getMessage());
} catch (SQLException err) {
    JOptionPane.showMessageDialog(this, "SQL Error: " + err.getMessage());
}


    }//GEN-LAST:event_btnSaveRecordActionPerformed

    private void btnDeleteRecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteRecordActionPerformed
        // TODO add your handling code here:
       try {
    rs.deleteRow();

    stmt.close();
    rs.close();

    stmt = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);

    String SQL = "SELECT * FROM data_cabang";
    rs = stmt.executeQuery(SQL);

    rs.next();

     int id_col = rs.getInt("ID");
    String id = Integer.toString(id_col);
    String alamat = rs.getString("Alamat");
    String kecamatan = rs.getString("Kecamatan");
    String kota = rs.getString("Kota");

     textID.setText(id);
    textAlamat.setText(alamat);
    textKecamatan.setText(kecamatan);
    textKota.setText(kota);

    JOptionPane.showMessageDialog(this, "Record Deleted");
} catch (SQLException err) {
    JOptionPane.showMessageDialog(this, err.getMessage());
}
 
        
    }//GEN-LAST:event_btnDeleteRecordActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        exportToExcelFromDatabase();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(database_form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(database_form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(database_form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(database_form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new database_form().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelNewRecord;
    private javax.swing.JButton btnDeleteRecord;
    private javax.swing.JButton btnFirst;
    private javax.swing.JButton btnLast;
    private javax.swing.JButton btnNewRecord;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrevious;
    private javax.swing.JButton btnSaveRecord;
    private javax.swing.JButton btnUpdateRecord;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField textAlamat;
    private javax.swing.JTextField textID;
    private javax.swing.JTextField textKecamatan;
    private javax.swing.JTextField textKota;
    private javax.swing.JLabel textkota;
    // End of variables declaration//GEN-END:variables
}
